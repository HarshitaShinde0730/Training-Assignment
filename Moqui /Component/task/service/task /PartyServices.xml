<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">
    <!-- CREATE PARTY-->
    <service verb="create" noun="Party" type="entity-auto">
        <in-parameters>
            <parameter name="partyId"/>
            <parameter name="partyType"/>
            <parameter name="firstname"/>
            <parameter name="lastname"/>
        </in-parameters>
        <out-parameters>
            <parameter name="partyId" type="id"/>
        </out-parameters>
    </service>
    <!-- UPDATE PARTY -->
    <service verb="update" noun="Party" type="entity-auto">
        <in-parameters>
            <auto-parameters include="nonpk"/>
            <parameter name="firstname"/>
            <parameter name="lastname"/>
        </in-parameters>
    </service>
    <!-- DELETE -->
    <service verb="delete" noun="Party" type="entity-auto">
        <in-parameters>
            <auto-parameters include="pk" required="true"/>
            <auto-parameters include="all"/>
        </in-parameters>
    </service>
    <!-- ========================= -->
    <!-- CREATE CONTACT_MECH-->
    <service verb="create" noun="ContactMech" type="entity-auto">
        <in-parameters>
            <parameter name="contactMechId" required="true"/>
            <parameter name="partyId" required="true"/>
            <parameter name="streetAddress"/>
            <parameter name="state"/>
            <parameter name="city"/>
            <parameter name="postalCode"/>
        </in-parameters>
        <out-parameters>
            <auto-parameters include="pk" required="true"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="Party" list="partyList">
                <econdition field-name="partyId" from="partyId"/>
            </entity-find>
            <if condition="partyList.isEmpty()">
                <set-field field="errorMessage" value="Party with ID [${partyId}] does not exist."/>
                <return/>
            </if>
            <service-call name="create#task.PartyServices.ContactMech"/>
        </actions>
    </service>
    <!-- UPDATE CONTACT_MECH -->
    <service verb="update" noun="ContactMech" type="entity-auto">
        <in-parameters>
            <auto-parameters include="nonpk"/>
            <parameter name="streetAddress"/>
            <parameter name="state"/>
            <parameter name="city"/>
            <parameter name="postalCode"/>
        </in-parameters>
    </service>
    <!-- DELETE CONTACT_MECH -->
    <service verb="delete" noun="ContactMech" type="entity-auto">
        <in-parameters>
            <auto-parameters include="pk" required="true"/>
            <auto-parameters include="all"/>
        </in-parameters>
    </service>
    <!-- PRODUCT -->
    <service verb="create" noun="Product" type="entity-auto">
        <in-parameters>
            <auto-parameters include="all"/>
        </in-parameters>
        <out-parameters>
            <auto-parameters include="pk" required="true"/>
        </out-parameters>
    </service>
    <!-- UPDATE PRODUCT -->
    <service verb="update" noun="Product" type="entity-auto">
        <in-parameters>
            <auto-parameters include="nonpk"/>
            <parameter name="productName"/>
            <parameter name="color"/>
            <parameter name="size"/>
        </in-parameters>
    </service>
    <!-- DELETE CONTACT_MECH -->
    <service verb="delete" noun="Product" type="entity-auto">
        <in-parameters>
            <auto-parameters include="pk" required="true"/>
        </in-parameters>
    </service>
    <!-- ORDER_HEADER-->
    <service verb="create" noun="OrderHeader" type="entity-auto">
        <in-parameters>
            <parameter name="orderId"/>
            <parameter name="orderDate"/>
            <parameter name="shippingContactMechId"/>
            <parameter name="billingContactMechId"/>
        </in-parameters>
        <out-parameters>
            <auto-parameters include="pk" required="true"/>
        </out-parameters>
    </service>
    <!-- UPDATE ORDER HEADER -->
    <service verb="update" noun="OrderHeader" type="entity-auto">
        <in-parameters>
            <auto-parameters include="nonpk"/>
            <parameter name="orderDate"/>
            <parameter name="shippingContactMechId"/>
            <parameter name="billingContactMechId"/>
        </in-parameters>
    </service>
    <!-- DELETE ORDER_HEADER -->
    <service verb="delete" noun="OrderHeader" type="entity-auto">
        <in-parameters>
            <parameter name="orderId"/>
        </in-parameters>
    </service>
    <service verb="create" noun="OrderItem" type="entity-auto">
        <in-parameters>
            <parameter name="orderId" required="true"/>
            <parameter name="orderItemSeqId" required="true"/>
            <parameter name="productId" required="true"/>
            <parameter name="quantity"/>
            <parameter name="status"/>
        </in-parameters>
        <out-parameters>
            <auto-parameters include="all" required="true"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="OrderHeader" list="orderList">
                <econdition field-name="orderId" from="OrderHeader"/>
            </entity-find>
            <if condition="orderList.isEmpty()">
                <set-field field="errorMessage" value="Order with ID [${orderId}] does not exist."/>
                <return/>
            </if>
            <service-call name="create#task.PartyServices.OrderHeader"/>
            <actions>
                <entity-find entity-name="Product" list="productList">
                    <econdition field-name="productId" from="Product"/>
                </entity-find>
                <if condition="productList.isEmpty()">
                    <set-field field="errorMessage" value="Product with ID [${productId}] does not exist."/>
                    <return/>
                </if>
                <service-call name="create#task.PartyServices.Product"/>
            </actions>
        </actions>
    </service>
</services>
